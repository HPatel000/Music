{"version":3,"sources":["Pages/Login.js","context/GlobalContext.js","components/Navbar.js","components/Infocard.js","Pages/Home.js","Pages/Playlists.js","components/Song.js","Pages/Search.js","Pages/Tracks.js","Pages/Library.js","components/Alerts.js","App.js","useAuth.js","context/GlobalReducer.js","context/GlobalState.js","index.js"],"names":["accessUrl","join","Login","className","href","GlobalContext","createContext","Navbar","user","useContext","exact","activeClassName","to","HomeRounded","SearchRounded","PlaylistPlayRounded","LibraryMusicRounded","Avatar","display_name","Infocard","cardInfo","info","name","type","id","img","images","url","style","textDecoration","pathname","src","owner","PlayCircleFilledRounded","Home","token","spotifyApi","getUserPlaylists","useState","userTopArtists","setUserTopArtists","newReleases","setNewReleases","useEffect","getMyTopArtists","then","artists","getNewReleases","res","console","log","albums","items","map","artist","album","Playlists","userPlaylist","setAlert","modalDisplay","setModalDisplay","description","public","newPlaylistInfo","setNewPlaylistInfo","onChange","e","target","value","playlist","onClick","Add","action","htmlFor","required","checked","preventDefault","createPlaylist","makeNewPlaylist","Song","songInfo","setSomething","currPlaylistId","getTime","song","trackName","duration","duration_ms","alt","Favorite","PlaylistAdd","playlistId","trackId","removeTracksFromPlaylist","addTracksToPlaylist","Search","scrollRef","createRef","query","setQuery","categories","setCategories","searchResult","setSearchResult","getCategories","offset","country","data","err","ref","search","limit","result","searchQuery","placeholder","tracks","item","playlists","category","current","scrollTo","top","behavior","getCategoryPlaylists","icons","Tracks","useParams","formatNumber","something","setTracks","playlistData","setPlaylistData","artistData","setArtistData","albumData","setAlbumData","followArtist","setFollowArtist","saveAlbumBtn","setSaveAlbumBtn","followPlaylist","setFollowPlaylist","toggleSavedAlbum","removeFromMySavedAlbums","addToMySavedAlbums","toggleFollowPlaylist","unfollowPlaylist","getPlaylistTracks","getPlaylist","areFollowingPlaylist","getArtistTopTracks","getArtist","isFollowingArtists","getAlbumTracks","getAlbum","containsMySavedAlbums","total","FavoriteRounded","FavoriteBorderRounded","followers","genres","length","genre","followArtists","unfollowArtists","album_type","label","total_tracks","track","Library","savedAlbums","setSavedAlbums","followedArtist","setFollowedArtist","userTopTracks","setUserTopTracks","getMySavedAlbums","getFollowedArtists","getMyTopTracks","Alerts","alerts","msg","code","URLSearchParams","window","location","get","App","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","history","pushState","catch","interval","setInterval","clearInterval","useAuth","setToken","path","component","state","payload","GlobalState","props","initialState","loading","useReducer","GlobalReducer","dispatch","SpotifyWebApi","getUser","getMe","Provider","millisec","seconds","toFixed","minutes","Math","floor","hours","timeout","setTimeout","num","i","si","v","s","replace","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a053912d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst authEndpoint = 'https://accounts.spotify.com/authorize'\r\nconst clientId = 'f8a20825f0214028b72b59cd14a4ac2e'\r\n\r\n// const redirectUri = 'http://localhost:3000/'\r\nconst redirectUri = 'https://spotify-clone-866b.onrender.com'\r\nconst scopes = [\r\n  'user-read-email',\r\n  'user-read-private',\r\n  'user-read-currently-playing',\r\n  'user-read-recently-played',\r\n  'user-read-playback-state',\r\n  'user-top-read',\r\n  'user-follow-read',\r\n  'user-follow-modify',\r\n  'user-library-read',\r\n  'user-library-modify',\r\n  'user-modify-playback-state',\r\n  'playlist-read-private',\r\n  'playlist-read-collaborative',\r\n  'playlist-modify-public',\r\n  'playlist-modify-private',\r\n]\r\n\r\nconst accessUrl = `${authEndpoint}?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  '%20'\r\n)}`\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className='Login'>\r\n      <h1>LET THE MUSIC PLAY</h1>\r\n      <a href={accessUrl}>Login with Spotify</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { createContext } from 'react'\r\nconst GlobalContext = createContext()\r\nexport default GlobalContext\r\n","import React, { useContext } from 'react'\r\nimport {\r\n  HomeRounded,\r\n  LibraryMusicRounded,\r\n  PlaylistPlayRounded,\r\n  SearchRounded,\r\n} from '@material-ui/icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport GlobalContext from '../context/GlobalContext'\r\nimport { Avatar } from '@material-ui/core'\r\n\r\nconst Navbar = () => {\r\n  const { user } = useContext(GlobalContext)\r\n  return (\r\n    <div className='navbar'>\r\n      <h2 className='heading'>Music</h2>\r\n      <div className='navItems'>\r\n        <NavLink\r\n          exact\r\n          activeClassName='navItemActive'\r\n          className='navItem'\r\n          to='/'\r\n        >\r\n          <p className='navLink'>\r\n            {' '}\r\n            <HomeRounded className='navIcons' />\r\n            Home\r\n          </p>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='navItemActive'\r\n          className='navItem'\r\n          to='/search'\r\n        >\r\n          <p className='navLink'>\r\n            {' '}\r\n            <SearchRounded className='navIcons' />\r\n            Search\r\n          </p>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='navItemActive'\r\n          className='navItem'\r\n          to='/playlists'\r\n        >\r\n          <p className='navLink'>\r\n            {' '}\r\n            <PlaylistPlayRounded className='navIcons' />\r\n            Playlist\r\n          </p>\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          activeClassName='navItemActive'\r\n          className='navItem'\r\n          to='/yourlibrary'\r\n        >\r\n          <p className='navLink'>\r\n            {' '}\r\n            <LibraryMusicRounded className='navIcons' />\r\n            Your Library\r\n          </p>\r\n        </NavLink>\r\n      </div>\r\n      {user && (\r\n        <div className='navUser'>\r\n          <Avatar className='avatar' />\r\n          <h3 className='navUsername'>{user.display_name}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { PlayCircleFilledRounded } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Infocard = ({ cardInfo }) => {\r\n  const info = {\r\n    name: cardInfo.name,\r\n    type: cardInfo.type,\r\n    id: cardInfo.id,\r\n    img: cardInfo.images[0]?.url,\r\n  }\r\n  const { name, type, id, img } = info\r\n  return (\r\n    <Link\r\n      style={{ textDecoration: 'none' }}\r\n      to={{\r\n        pathname: `/${type}/${id}`,\r\n      }}\r\n    >\r\n      <div className='infocard'>\r\n        <img src={img} />\r\n        <h4>{name}</h4>\r\n        {type === 'playlist' ? (\r\n          <p>By {cardInfo.owner.display_name}</p>\r\n        ) : (\r\n          <p>{cardInfo.type}</p>\r\n        )}\r\n\r\n        <PlayCircleFilledRounded className='infocardPlayBtn' />\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default Infocard\r\n","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport GlobalContext from '../context/GlobalContext'\r\nimport Navbar from '../components/Navbar'\r\nimport Infocard from '../components/Infocard'\r\n\r\nconst Home = () => {\r\n  const { token, spotifyApi, getUserPlaylists, user } =\r\n    useContext(GlobalContext)\r\n  const [userTopArtists, setUserTopArtists] = useState(null)\r\n  const [newReleases, setNewReleases] = useState(null)\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      spotifyApi.getMyTopArtists().then(artists => {\r\n        setUserTopArtists(artists)\r\n      })\r\n\r\n      getUserPlaylists()\r\n      spotifyApi.getNewReleases().then(res => {\r\n        console.log(res)\r\n        setNewReleases(res.albums)\r\n      })\r\n    }\r\n  }, [token])\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className='home scrollable'>\r\n        {userTopArtists && user && (\r\n          <div className='mainContainer scrollable'>\r\n            <h2 className='heading'>{user?.display_name}'s Top Artists</h2>\r\n            <div className='cardContainer'>\r\n              {userTopArtists?.items.map(artist => (\r\n                <Infocard key={artist.id} cardInfo={artist} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {newReleases && user && (\r\n          <div className='mainContainer scrollable'>\r\n            <h2 className='heading'>New Releases</h2>\r\n            <div className='cardContainer'>\r\n              {newReleases?.items.map(album => (\r\n                <Infocard key={album.id} cardInfo={album} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { Add } from '@material-ui/icons'\r\nimport React, { Fragment, useContext, useState } from 'react'\r\nimport Infocard from '../components/Infocard'\r\nimport Navbar from '../components/Navbar'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Playlists = () => {\r\n  const { spotifyApi, user, userPlaylist, getUserPlaylists, setAlert } =\r\n    useContext(GlobalContext)\r\n\r\n  const [modalDisplay, setModalDisplay] = useState(false)\r\n  const [newPlaylistInfo, setNewPlaylistInfo] = useState({\r\n    name: '',\r\n    description: '',\r\n    public: false,\r\n  })\r\n\r\n  const onChange = (e) =>\r\n    setNewPlaylistInfo({ ...newPlaylistInfo, [e.target.name]: e.target.value })\r\n\r\n  const makeNewPlaylist = (e) => {\r\n    e.preventDefault()\r\n    console.log(newPlaylistInfo)\r\n    spotifyApi\r\n      .createPlaylist(user?.id, {\r\n        name: newPlaylistInfo.name,\r\n        description: newPlaylistInfo.description,\r\n        public: newPlaylistInfo.public,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        setAlert('Playlist created')\r\n        getUserPlaylists()\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className='mainContainer scrollable'>\r\n        <h2 className='heading'>Uniquely Yours!</h2>\r\n        <div className='cardContainer'>\r\n          {userPlaylist &&\r\n            userPlaylist.items.map((playlist) => (\r\n              <Infocard key={playlist.id} cardInfo={playlist} />\r\n            ))}\r\n        </div>\r\n        <button\r\n          className='newPlaylistBtn'\r\n          onClick={() => {\r\n            setModalDisplay(true)\r\n            // removeSongFromPlaylist()\r\n          }}\r\n        >\r\n          <Add className='newPlaylistBtnIcon' /> New Playlist\r\n        </button>\r\n\r\n        <div className={`modal ${modalDisplay ? 'modalShow' : 'modalHide'}`}>\r\n          <div className='modalContent'>\r\n            <button\r\n              className='modalClose'\r\n              onClick={() => setModalDisplay(!modalDisplay)}\r\n            >\r\n              &times;\r\n            </button>\r\n            <form action='#' className='newPlaylistForm'>\r\n              <label htmlFor='playlistName'>Name </label>\r\n              <br />\r\n              <input\r\n                type='text'\r\n                id='playlistName'\r\n                name='name'\r\n                onChange={onChange}\r\n                value={newPlaylistInfo.name}\r\n                required\r\n              />\r\n              <br />\r\n              <label htmlFor='playlistDescription'>Description </label>\r\n              <br />\r\n              <textarea\r\n                type='text'\r\n                id='playlistDescription'\r\n                name='description'\r\n                onChange={onChange}\r\n                value={newPlaylistInfo.description}\r\n              ></textarea>\r\n              <br />\r\n              <label htmlFor='public'>Public </label>\r\n              <input\r\n                type='radio'\r\n                id='public'\r\n                name='playlistType'\r\n                onChange={(e) =>\r\n                  setNewPlaylistInfo({\r\n                    ...newPlaylistInfo,\r\n                    public: !newPlaylistInfo.public,\r\n                  })\r\n                }\r\n                checked={newPlaylistInfo.public}\r\n              />\r\n              <span className='inputRadio'></span>\r\n              <label htmlFor='private'>Private </label>\r\n              <input\r\n                type='radio'\r\n                id='private'\r\n                name='playlistType'\r\n                onChange={(e) =>\r\n                  setNewPlaylistInfo({\r\n                    ...newPlaylistInfo,\r\n                    public: !newPlaylistInfo.public,\r\n                  })\r\n                }\r\n                checked={!newPlaylistInfo.public}\r\n              />\r\n              <span className='inputRadio'></span>\r\n              <br />\r\n              <button\r\n                onClick={(e) => {\r\n                  makeNewPlaylist(e)\r\n                  setModalDisplay(false)\r\n                }}\r\n              >\r\n                Make Playlist\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Playlists\r\n","import { Favorite, PlaylistAdd } from '@material-ui/icons'\r\nimport React, { Fragment, useContext } from 'react'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Song = ({ songInfo, setSomething, currPlaylistId }) => {\r\n  const { spotifyApi, getTime, userPlaylist, setAlert } =\r\n    useContext(GlobalContext)\r\n\r\n  const song = {\r\n    id: songInfo.id,\r\n    trackName: songInfo.name,\r\n    duration: songInfo.duration_ms,\r\n    img: songInfo.album?.images[0]?.url,\r\n    artists: songInfo.artists.map(artist => artist.name),\r\n  }\r\n\r\n  const addToPLaylist = (playlistId, trackId) => {\r\n    console.log('Adding song to playlist ...')\r\n    spotifyApi.addTracksToPlaylist(playlistId, trackId).then(res => {\r\n      console.log('song added')\r\n      setAlert('Song added to playlist')\r\n    })\r\n  }\r\n\r\n  const removeSongFromPlaylist = (playlistId, trackId) => {\r\n    console.log('removing....')\r\n    spotifyApi.removeTracksFromPlaylist(playlistId, trackId).then(res => {\r\n      setSomething(res)\r\n      setAlert('Song removed from the playlist')\r\n      console.log('song removed')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='songInfo'>\r\n      <img className='songImg' src={song.img} alt='' />\r\n      <div className='songName'>\r\n        {song.trackName}\r\n        <br />\r\n        {song.artists?.map(artist => (\r\n          <small key={artist}>{artist}</small>\r\n        ))}\r\n      </div>\r\n      <div className='songDuration'>{getTime(song.duration)}</div>\r\n      <Favorite className='songLikeBtn' />\r\n      <div className='dropup'>\r\n        <PlaylistAdd className='songAddToPlaylist' />\r\n        <div className='dropupContent'>\r\n          {/* <p>Add To Playlist</p> */}\r\n          {userPlaylist?.items.map(playlist => (\r\n            <Fragment key={playlist.id}>\r\n              {playlist.id === currPlaylistId ? (\r\n                <button\r\n                  className='removeFromPlaylistButton'\r\n                  onClick={() =>\r\n                    removeSongFromPlaylist(currPlaylistId, [\r\n                      `spotify:track:${song.id}`,\r\n                    ])\r\n                  }\r\n                >\r\n                  <small>Remove From</small>\r\n                  <br />\r\n                  {playlist.name}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() =>\r\n                    addToPLaylist(playlist.id, [`spotify:track:${song.id}`])\r\n                  }\r\n                >\r\n                  <small>Add to</small>\r\n                  <br />\r\n                  {playlist.name}\r\n                </button>\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song\r\n","import { SearchRounded } from '@material-ui/icons'\r\nimport React, {\r\n  createRef,\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react'\r\nimport Infocard from '../components/Infocard'\r\nimport Navbar from '../components/Navbar'\r\nimport Song from '../components/Song'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Search = () => {\r\n  const { spotifyApi } = useContext(GlobalContext)\r\n  const scrollRef = createRef()\r\n\r\n  const [query, setQuery] = useState('')\r\n  const [categories, setCategories] = useState(null)\r\n  const [searchResult, setSearchResult] = useState(null)\r\n\r\n  const queryChange = e => {\r\n    setQuery(e.target.value)\r\n  }\r\n\r\n  const searchQuery = e => {\r\n    e.preventDefault()\r\n    console.log(`Searching for ${query}`)\r\n    spotifyApi\r\n      .search(query, ['track', 'artist', 'playlist', 'album'], { limit: 10 })\r\n      .then(result => {\r\n        console.log(result)\r\n        setSearchResult(result)\r\n      })\r\n  }\r\n\r\n  const getPlaylistsByCategory = category => {\r\n    console.log('Getting Category playlist ...')\r\n    scrollRef.current.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    })\r\n    spotifyApi.getCategoryPlaylists(category).then(playlists => {\r\n      console.log(playlists)\r\n      setSearchResult(playlists)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getCategories({\r\n        offset: 0,\r\n        country: 'IN',\r\n      })\r\n      .then(\r\n        function (data) {\r\n          console.log(data)\r\n          setCategories(data.categories)\r\n        },\r\n        function (err) {\r\n          console.log('Something went wrong!', err)\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className='search scrollable' ref={scrollRef}>\r\n        <div className='searchHeader'>\r\n          <form action='#'>\r\n            <button className='searchBtn' onClick={e => searchQuery(e)}>\r\n              <SearchRounded className='searchIcon' />\r\n            </button>\r\n            <input\r\n              type='search'\r\n              value={query}\r\n              onChange={queryChange}\r\n              placeholder='Search'\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        {searchResult && (\r\n          <Fragment>\r\n            {searchResult.tracks && (\r\n              <div className='songs'>\r\n                <h2 className='heading'>Songs</h2>\r\n                <div className='songsList'>\r\n                  {searchResult &&\r\n                    searchResult.tracks.items?.map(item => (\r\n                      <Song key={item.id} songInfo={item} />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {searchResult.artists && (\r\n              <div className='mainContainer'>\r\n                <h2 className='heading'>Artists</h2>\r\n                <div className='cardContainer'>\r\n                  {searchResult.artists.items?.map(artist => (\r\n                    <Infocard key={artist.id} cardInfo={artist} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {searchResult.playlists && (\r\n              <div className='mainContainer'>\r\n                <h2 className='heading'>Playlists</h2>\r\n                <div className='cardContainer'>\r\n                  {searchResult.playlists.items?.map(playlist => (\r\n                    <Infocard key={playlist.id} cardInfo={playlist} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {searchResult.albums && (\r\n              <div className='mainContainer'>\r\n                <h2 className='heading'>Albums</h2>\r\n                <div className='cardContainer'>\r\n                  {searchResult.albums.items?.map(album => (\r\n                    <Infocard key={album.id} cardInfo={album} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        {categories && (\r\n          <Fragment>\r\n            <h2 className='heading'>Search by Category</h2>\r\n            <div className='categoryCardContainer'>\r\n              {categories?.items?.map(item => (\r\n                <div\r\n                  className='categoryCard'\r\n                  key={item.id}\r\n                  onClick={() => getPlaylistsByCategory(item.id)}\r\n                >\r\n                  <img src={item.icons[0].url} alt='' />\r\n                  <p>{item.name}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import { FavoriteBorderRounded, FavoriteRounded } from '@material-ui/icons'\r\nimport React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport Navbar from '../components/Navbar'\r\nimport Song from '../components/Song'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Tracks = () => {\r\n  const { id, type } = useParams()\r\n  const { spotifyApi, formatNumber, user, getUserPlaylists } =\r\n    useContext(GlobalContext)\r\n\r\n  const [something, setSomething] = useState('something')\r\n\r\n  const [tracks, setTracks] = useState(null)\r\n\r\n  const [playlistData, setPlaylistData] = useState(null)\r\n  const [artistData, setArtistData] = useState(null)\r\n  const [albumData, setAlbumData] = useState(null)\r\n\r\n  const [followArtist, setFollowArtist] = useState('Follow')\r\n  const [saveAlbumBtn, setSaveAlbumBtn] = useState(false)\r\n  const [followPlaylist, setFollowPlaylist] = useState(false)\r\n\r\n  const toggleFollowArtist = () => {\r\n    if (followArtist === 'Follow') {\r\n      spotifyApi.followArtists([`${id}`]).then(() => {\r\n        setFollowArtist('Unfollow')\r\n      })\r\n    } else {\r\n      spotifyApi.unfollowArtists([`${id}`]).then(() => {\r\n        setFollowArtist('Follow')\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSavedAlbum = () => {\r\n    if (!saveAlbumBtn) {\r\n      spotifyApi.addToMySavedAlbums([`${id}`]).then(() => {\r\n        setSaveAlbumBtn(true)\r\n      })\r\n    } else {\r\n      spotifyApi.removeFromMySavedAlbums([`${id}`]).then(() => {\r\n        setSaveAlbumBtn(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleFollowPlaylist = () => {\r\n    if (!followPlaylist) {\r\n      spotifyApi.followPlaylist(id).then(() => {\r\n        setFollowPlaylist(true)\r\n      })\r\n    } else {\r\n      spotifyApi.unfollowPlaylist(id).then(() => {\r\n        setFollowPlaylist(false)\r\n      })\r\n    }\r\n    getUserPlaylists()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (type === 'playlist') {\r\n      console.log('playlist')\r\n      console.log('getting songs from playlist...')\r\n      spotifyApi.getPlaylistTracks(id).then(tracks => {\r\n        console.log(tracks.items)\r\n        setTracks(tracks.items)\r\n      })\r\n      spotifyApi.getPlaylist(id).then(playlist => {\r\n        console.log(playlist)\r\n        setPlaylistData(playlist)\r\n      })\r\n      spotifyApi.areFollowingPlaylist(id, [`${user.id}`]).then(res => {\r\n        if (!res[0] === false) {\r\n          setFollowPlaylist(true)\r\n        } else {\r\n          setFollowPlaylist(false)\r\n        }\r\n      })\r\n    }\r\n    if (type === 'artist') {\r\n      console.log(\"Getting artist's songs ...\")\r\n      spotifyApi.getArtistTopTracks(id, 'IN').then(tracks => {\r\n        console.log(tracks.tracks)\r\n        setTracks(tracks.tracks)\r\n      })\r\n      spotifyApi.getArtist(id).then(artist => {\r\n        console.log(artist)\r\n        setArtistData(artist)\r\n      })\r\n      spotifyApi.isFollowingArtists([`${id}`]).then(res => {\r\n        if (!res[0] === false) {\r\n          setFollowArtist('Unfollow')\r\n        }\r\n      })\r\n    }\r\n    if (type === 'album') {\r\n      console.log('Getting album songs ...')\r\n      spotifyApi.getAlbumTracks(id).then(tracks => {\r\n        console.log(tracks.items)\r\n        setTracks(tracks.items)\r\n      })\r\n      spotifyApi.getAlbum(id).then(album => {\r\n        console.log(album)\r\n        setAlbumData(album)\r\n      })\r\n      spotifyApi.containsMySavedAlbums([`${id}`]).then(res => {\r\n        if (res[0] === true) {\r\n          setSaveAlbumBtn(true)\r\n        }\r\n      })\r\n    }\r\n  }, [something])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className='songs scrollable'>\r\n        {playlistData && (\r\n          <Fragment>\r\n            <div className='songsHeading'>\r\n              <img src={playlistData.images[0]?.url} alt='' />\r\n              <div className='songsHeadingInfo'>\r\n                <p>{playlistData.type}</p>\r\n                <h2 className='heading'>{playlistData.name}</h2>\r\n                <p>{playlistData.description}</p>\r\n                <p>By {playlistData.owner.display_name}</p>\r\n                <p>Total Tracks {playlistData.tracks.total}</p>\r\n              </div>\r\n            </div>\r\n            {playlistData.owner.id !== user.id && (\r\n              <Fragment>\r\n                {followPlaylist ? (\r\n                  <FavoriteRounded\r\n                    className='favBtn'\r\n                    onClick={toggleFollowPlaylist}\r\n                  />\r\n                ) : (\r\n                  <FavoriteBorderRounded\r\n                    className='favBtn'\r\n                    onClick={toggleFollowPlaylist}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        {artistData && (\r\n          <Fragment>\r\n            <div className='songsHeading'>\r\n              <img src={artistData.images[0]?.url} alt='' />\r\n              <div className='songsHeadingInfo'>\r\n                <p>{artistData.type}</p>\r\n                <h2 className='heading'>{artistData.name}</h2>\r\n                <p>Followers : {formatNumber(artistData.followers.total)}</p>\r\n                {artistData.genres.length > 0 && (\r\n                  <p>\r\n                    Genres:{' '}\r\n                    {artistData.genres?.map(genre => (\r\n                      <small key={genre}>{genre}</small>\r\n                    ))}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <button className='glowBtn' onClick={toggleFollowArtist}>\r\n              {followArtist}\r\n            </button>\r\n          </Fragment>\r\n        )}\r\n        {albumData && (\r\n          <Fragment>\r\n            <div className='songsHeading'>\r\n              <img src={albumData.images[0]?.url} alt='' />\r\n              <div className='songsHeadingInfo'>\r\n                <p>{albumData.album_type}</p>\r\n                <h2 className='heading'>{albumData.name}</h2>\r\n                <p>Label : {albumData.label}</p>\r\n                <p>{albumData.total_tracks} songs</p>\r\n                {albumData.artists.length > 0 && (\r\n                  <p>\r\n                    Artists:{' '}\r\n                    {albumData.artists?.map(artist => (\r\n                      <small key={artist.id}>{artist.name}</small>\r\n                    ))}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {saveAlbumBtn ? (\r\n              <FavoriteRounded className='favBtn' onClick={toggleSavedAlbum} />\r\n            ) : (\r\n              <FavoriteBorderRounded\r\n                className='favBtn'\r\n                onClick={toggleSavedAlbum}\r\n              />\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        <div className='songsList'>\r\n          {type === 'playlist' ? (\r\n            <Fragment>\r\n              {tracks?.map(item => (\r\n                <Song\r\n                  key={item.track.id}\r\n                  songInfo={item.track}\r\n                  currPlaylistId={id}\r\n                  setSomething={setSomething}\r\n                />\r\n              ))}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {tracks?.map(item => (\r\n                <Song\r\n                  key={item.id}\r\n                  songInfo={item}\r\n                  currPlaylistId={id}\r\n                  setTracks={null}\r\n                />\r\n              ))}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Tracks\r\n","import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport Infocard from '../components/Infocard'\r\nimport Navbar from '../components/Navbar'\r\nimport Song from '../components/Song'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Library = () => {\r\n  const { spotifyApi, userPlaylist, user } = useContext(GlobalContext)\r\n  const [savedAlbums, setSavedAlbums] = useState(null)\r\n  const [followedArtist, setFollowedArtist] = useState(null)\r\n  const [userTopTracks, setUserTopTracks] = useState(null)\r\n\r\n  useEffect(() => {\r\n    spotifyApi.getMySavedAlbums().then(albums => {\r\n      console.log(albums)\r\n      setSavedAlbums(albums)\r\n    })\r\n    spotifyApi.getFollowedArtists().then(artists => {\r\n      console.log(artists)\r\n      setFollowedArtist(artists.artists)\r\n    })\r\n    spotifyApi.getMyTopTracks().then(tracks => {\r\n      setUserTopTracks(tracks.items)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <div className='library scrollable'>\r\n        {savedAlbums && (\r\n          <div className='mainContainer'>\r\n            <h2 className='heading'>Albums</h2>\r\n            <div className='cardContainer'>\r\n              {savedAlbums.items?.map(album => (\r\n                <Infocard key={album.album.id} cardInfo={album.album} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {followedArtist && (\r\n          <div className='mainContainer'>\r\n            <h2 className='heading'>Artists</h2>\r\n            <div className='cardContainer'>\r\n              {followedArtist.items?.map(artist => (\r\n                <Infocard key={artist.id} cardInfo={artist} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {userPlaylist && (\r\n          <div className='mainContainer'>\r\n            <h2 className='heading'>Playlists</h2>\r\n            <div className='cardContainer'>\r\n              {userPlaylist &&\r\n                userPlaylist.items.map(playlist => (\r\n                  <Infocard key={playlist.id} cardInfo={playlist} />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {userTopTracks && user && (\r\n          <div className='songs scrollable'>\r\n            <h2 className='heading'>{user?.display_name}'s Top Tracks</h2>\r\n            <div className='songsList'>\r\n              {userTopTracks?.map(item => (\r\n                <Song key={item.id} songInfo={item} setTracks={null} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Library\r\n","import React, { Fragment, useContext } from 'react'\r\nimport GlobalContext from '../context/GlobalContext'\r\n\r\nconst Alerts = () => {\r\n  const { alerts } = useContext(GlobalContext)\r\n  console.log(alerts)\r\n  return (\r\n    <Fragment>\r\n      {alerts && <div className={'alert'}>{alerts?.msg}</div>}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import './App.css'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Login from './Pages/Login'\nimport Home from './Pages/Home'\nimport Playlists from './Pages/Playlists'\nimport useAuth from './useAuth'\nimport { useContext, useEffect } from 'react'\nimport GlobalContext from './context/GlobalContext'\nimport Search from './Pages/Search'\nimport Tracks from './Pages/Tracks'\nimport Library from './Pages/Library'\nimport Alerts from './components/Alerts'\n\nconst code = new URLSearchParams(window.location.search).get('code')\n\nfunction App() {\n  const accessToken = useAuth(code)\n  const { setToken } = useContext(GlobalContext)\n  useEffect(() => {\n    if (!accessToken) return\n    setToken(accessToken)\n  }, [accessToken])\n  return (\n    <div className='App'>\n      <Alerts />\n      {code ? (\n        <Router>\n          <Switch>\n            <Route exact path='/:type/:id' component={Tracks} />\n            <Route exact path='/:type/:id' component={Tracks} />\n            <Route exact path='/search' component={Search} />\n            <Route exact path='/yourlibrary' component={Library} />\n            <Route exact path='/playlists' component={Playlists} />\n            <Route exact path='/' component={Home} />\n            <Route path='*' component={Home} />\n          </Switch>\n        </Router>\n      ) : (\n        <Login />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState()\n  const [refreshToken, setRefreshToken] = useState()\n  const [expiresIn, setExpiresIn] = useState()\n\n  useEffect(() => {\n    axios\n      .post('/api/login', {\n        code,\n      })\n      .then(res => {\n        setAccessToken(res.data.accessToken)\n        setRefreshToken(res.data.refreshToken)\n        setExpiresIn(res.data.expiresIn)\n        window.history.pushState({}, null, '/')\n      })\n      .catch(() => {\n        window.location = '/'\n      })\n  }, [code])\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return\n    const interval = setInterval(() => {\n      axios\n        .post('/api/refresh', {\n          refreshToken,\n        })\n        .then(res => {\n          setAccessToken(res.data.accessToken)\n          setExpiresIn(res.data.expiresIn)\n        })\n        .catch(() => {\n          window.location = '/'\n        })\n    }, (expiresIn - 60) * 1000)\n\n    return () => clearInterval(interval)\n  }, [refreshToken, expiresIn])\n\n  return accessToken\n}\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      }\r\n    case 'SET_TOKEN':\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n      }\r\n    case 'INITIALIZE_SPOTIFY_API':\r\n      return {\r\n        ...state,\r\n        spotifyApi: action.payload,\r\n      }\r\n    case 'SET_USER_PLAYLISTS':\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        userPlaylist: action.payload,\r\n      }\r\n    case 'SET_ALERT':\r\n      console.log('action.payload')\r\n      return {\r\n        ...state,\r\n        alerts: action.payload,\r\n      }\r\n    case 'REMOVE_ALERT':\r\n      return {\r\n        ...state,\r\n        alerts: null,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport GlobalContext from './GlobalContext'\r\nimport GlobalReducer from './GlobalReducer'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\n\r\nconst GlobalState = props => {\r\n  const initialState = {\r\n    spotifyApi: null,\r\n    token: null,\r\n    loading: false,\r\n    user: null,\r\n    userPlaylist: null,\r\n    alerts: null,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(GlobalReducer, initialState)\r\n\r\n  const spotifyApi = new SpotifyWebApi()\r\n\r\n  const setToken = accessToken => {\r\n    spotifyApi.setAccessToken(accessToken)\r\n    dispatch({\r\n      type: 'SET_TOKEN',\r\n      payload: accessToken,\r\n    })\r\n    dispatch({\r\n      type: 'INITIALIZE_SPOTIFY_API',\r\n      payload: spotifyApi,\r\n    })\r\n    getUser()\r\n  }\r\n\r\n  // spotifyApi.getRecommendations()\r\n  // // spotifyApi.getNewReleases\r\n  // // spotifyApi.getRecommendations\r\n\r\n  const getUser = () => {\r\n    console.log('Getting User ...')\r\n    spotifyApi.getMe().then(user => {\r\n      dispatch({\r\n        type: 'SET_USER',\r\n        payload: user,\r\n      })\r\n    })\r\n  }\r\n\r\n  const getUserPlaylists = () => {\r\n    console.log('getting user playlist...')\r\n    spotifyApi.getUserPlaylists(initialState.user?.id).then(playlists => {\r\n      dispatch({\r\n        type: 'SET_USER_PLAYLISTS',\r\n        payload: playlists,\r\n      })\r\n    })\r\n  }\r\n\r\n  const setAlert = (msg, timeout = 4000) => {\r\n    dispatch({\r\n      type: 'SET_ALERT',\r\n      payload: { msg },\r\n    })\r\n\r\n    setTimeout(() => dispatch({ type: 'REMOVE_ALERT' }), timeout)\r\n  }\r\n\r\n  const getTime = millisec => {\r\n    var seconds = (millisec / 1000).toFixed(0)\r\n    var minutes = Math.floor(seconds / 60)\r\n    var hours = ''\r\n    if (minutes > 59) {\r\n      hours = Math.floor(minutes / 60)\r\n      hours = hours >= 10 ? hours : '0' + hours\r\n      minutes = minutes - hours * 60\r\n      minutes = minutes >= 10 ? minutes : '0' + minutes\r\n    }\r\n    seconds = Math.floor(seconds % 60)\r\n    seconds = seconds >= 10 ? seconds : '0' + seconds\r\n    if (hours !== '') {\r\n      return hours + ':' + minutes + ':' + seconds\r\n    }\r\n    return minutes + ':' + seconds\r\n  }\r\n\r\n  const formatNumber = num => {\r\n    if (num < 1000) {\r\n      return num\r\n    }\r\n    var si = [\r\n      { v: 1e3, s: 'K' },\r\n      { v: 1e6, s: 'M' },\r\n      { v: 1e9, s: 'B' },\r\n      { v: 1e12, s: 'T' },\r\n      { v: 1e15, s: 'P' },\r\n      { v: 1e18, s: 'E' },\r\n    ]\r\n    var i\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].v) {\r\n        break\r\n      }\r\n    }\r\n    return (\r\n      (num / si[i].v).toFixed(2).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, '$1') +\r\n      si[i].s\r\n    )\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        spotifyApi: state.spotifyApi,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        userPlaylist: state.userPlaylist,\r\n        alerts: state.alerts,\r\n        getTime,\r\n        setToken,\r\n        getUser,\r\n        getUserPlaylists,\r\n        setAlert,\r\n        formatNumber,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport GlobalState from './context/GlobalState'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalState>\n      <App />\n    </GlobalState>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}